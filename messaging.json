{"README.md":"\n> Open this page at [https://patchesthesnake.github.io/messaging/](https://patchesthesnake.github.io/messaging/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/patchesthesnake/messaging** and import\n\n## Edit this project ![Build status badge](https://github.com/patchesthesnake/messaging/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/patchesthesnake/messaging** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/patchesthesnake/messaging/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","custom.ts":"\n","main.ts":"messageing.onReceivedString(function (receivedString) {\n    basic.showString(receivedString)\n})\ninput.onGesture(Gesture.Shake, function () {\n    messageing.sendString(\"testtr\")\n})\nmessageing.connect(34)\n","messaging.ts":"// Add your code here\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#E3008C icon=\"\\uf012\"\nnamespace messageing {\n\n\n\n\n    //% weight=60\n    //% blockId=radio_Connect block=\"connect %startingnetworkfreq\" blockGap=8\n    //% group=\"Send\"\n    export function connect(startingnetworkfreq: number): void {\n        radio.setGroup(startingnetworkfreq)\n    }\n\n    //% help=radio/send-string\n    //% weight=58\n    //% blockId=radio_datagram_send_string_2 block=\"radio send string %msg\"\n    //% msg.shadowOptions.toString=true\n    //% group=\"Send\"\n\n    export function sendString(value: string) {\n        let cc = randint(100, 255)\n        radio.sendString(cc.toString() + \":\" + value)\n        radio.setGroup(cc)\n    }\n\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    \n    let onReceivedValueHandler: (receivedString: string) => void;\n\n    /**\n     * Registers code to run when the radio receives a string.\n     */\n\n\n    //% blockId=radio_on_string_drag_2 block=\"on radio received\" blockGap=16\n    //%  draggableParameters=reporter\n    //% group=\"Receive\"\n    //% weight=18\n    export function onReceivedString(cb: (receivedString: string) => void) {\n        onReceivedValueHandler = cb;\n        //basic.showString(\"Hello!\")\n\n    }\n    radio.onReceivedString(function (receivedString: string) {\n        let numm = receivedString.substr(4)\n\n        let num = parseInt(receivedString.substr(0, 3))\n        //basic.showString(num)\n        if (onReceivedValueHandler) {\n            onReceivedValueHandler(numm)\n        } radio.setGroup(num)\n    })\n\n\n\n\n\n}\n","pxt.json":"{\n    \"name\": \"messaging\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\",\n        \"test.ts\",\n        \"messaging.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"5.0.12\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// Add your code here\nmessageing.onReceivedString(function (receivedString) {\n    basic.showString(receivedString)\n})\ninput.onGesture(Gesture.Shake, function () {\n    messageing.sendString(\"test\")\n})\nmessageing.connect(34)"}